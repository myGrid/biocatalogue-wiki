
<h2 class="sectionedit1" id="test_scripts_in_biocatalogue">Test Scripts in BioCatalogue</h2>
<div class="level2">

</div>
<!-- EDIT1 SECTION "Test Scripts in BioCatalogue" [1-41] -->
<h3 class="sectionedit2" id="what_are_test_scripts">What Are Test Scripts?</h3>
<div class="level3">

<p>
Test scripts are simple clients to web services which can be uploaded to the BioCatalogue to be run by the BioCatalogue system. The purpose of the test scripts is double fold:
</p>
<ul>
<li class="level1"><div class="li"> they provide the users  with an example client of how to use the service</div>
</li>
<li class="level1"><div class="li"> they enable the biocatalogue system to monitor the status of the service by running these sample clients regularly</div>
</li>
</ul>

</div>
<!-- EDIT2 SECTION "What Are Test Scripts?" [42-448] -->
<h3 class="sectionedit3" id="who_can_submit_a_test_script">Who Can Submit a Test Script?</h3>
<div class="level3">

<p>
Only those that have full permissions on services to BioCatalogue are able to submit test scripts as well. They can only submit test scripts against the services which they registered or are responsible for. You can check your user profile on BioCatalogue to see the services you submitted or are responsible for.
</p>

</div>
<!-- EDIT3 SECTION "Who Can Submit a Test Script?" [449-804] -->
<h3 class="sectionedit4" id="what_kinds_of_scripts_are_allowed">What Kinds of Scripts are Allowed?</h3>
<div class="level3">

<p>
Test script should be written in one of the following scripting languages:
</p>
<ul>
<li class="level1"><div class="li"> perl</div>
</li>
<li class="level1"><div class="li"> python</div>
</li>
<li class="level1"><div class="li"> ruby</div>
</li>
</ul>

<p>
BioCatalogue is also able to run <a href="http://www.soapui.org/" class="urlextern" target="_blank" title="http://www.soapui.org/"  rel="nofollow">soapUI</a> project files. These are xml files that can be generated by building test cases with the <a href="http://www.soapui.org/" class="urlextern" target="_blank" title="http://www.soapui.org/"  rel="nofollow">soapUI</a> framework.
</p>

</div>
<!-- EDIT4 SECTION "What Kinds of Scripts are Allowed?" [805-1156] -->
<h3 class="sectionedit5" id="what_is_the_specification_of_the_test_scripts">What is the Specification of the Test Scripts?</h3>
<div class="level3">

<p>
Test scripts should have the following properties:
</p>
<ul>
<li class="level1"><div class="li"> Test script files should be executable on the command line and should take no arguments.</div>
</li>
<li class="level1"><div class="li"> Test scripts should <strong>always</strong> exit with a status code which determines whether the test passed or not.  This code is an integer between 0 and 255 (inclusive) where 0 indicates successful execution. </div>
</li>
<li class="level1"><div class="li"> If a script requires other files, these files should supplied with the script. These can be uploaded as a zip archive</div>
</li>
<li class="level1"><div class="li"> Execution time for script should not be more than an hour. Script will be terminated if they exceed this max allowed time</div>
</li>
</ul>

</div>
<!-- EDIT5 SECTION "What is the Specification of the Test Scripts?" [1157-1812] -->
<h3 class="sectionedit6" id="will_scripts_be_available_for_running_immediately_upon_submission">Will Scripts be available for running immediately upon Submission?</h3>
<div class="level3">

<p>
 Yes. However, newly submitted scripts will be  schedule for the next run of the monitoring framework. The BioCatalogue administrators however reserve the right to deactivate any tests if they are deemed to be unsuitable for the monitoring purpose. 
</p>

</div>
<!-- EDIT6 SECTION "Will Scripts be available for running immediately upon Submission?" [1813-2140] -->
<h3 class="sectionedit7" id="which_libraries_does_biocatalogue_support">Which libraries does BioCatalogue Support?</h3>
<div class="level3">

<p>
<strong>Perl</strong>
</p>

<p>
The main module needed for WSDL services include :
</p>
<ul>
<li class="level1"><div class="li"> XML::LibXML</div>
</li>
<li class="level1"><div class="li"> XML::Compile version 1.07</div>
</li>
<li class="level1"><div class="li"> XML::Compile::WSDL11 version 2.08</div>
</li>
<li class="level1"><div class="li"> XML::Compile::SOAP11 version 2.08</div>
</li>
</ul>

<p>
<strong>Python</strong>
</p>
<ul>
<li class="level1"><div class="li"> PyXML version 0.8.4</div>
</li>
<li class="level1"><div class="li"> fpconst version 0.7.2</div>
</li>
<li class="level1"><div class="li"> ZSI version 2.1</div>
</li>
<li class="level1"><div class="li"> SOAPpy version 0.12.0</div>
</li>
<li class="level1"><div class="li"> MySQLdb</div>
</li>
</ul>

<p>
<strong>Ruby</strong>
</p>
<ul>
<li class="level1"><div class="li"> ruby version 1.8.6</div>
</li>
</ul>

</div>
<!-- EDIT7 SECTION "Which libraries does BioCatalogue Support?" [2141-2534] -->
<h3 class="sectionedit8" id="example">Example</h3>
<div class="level3">

</div>

<h4 id="perl">Perl</h4>
<div class="level4">

<p>
Sample perl client for the <a href="http://www.biocatalogue.org/services/106" class="urlextern" target="_blank" title="http://www.biocatalogue.org/services/106"  rel="nofollow">EMBOSS showfeat </a> service in BioCatalogue. 
</p>
<pre class="code">
#!/usr/bin/perl

use XML::Compile::SOAP11;
use XML::Compile::WSDL11;
use XML::Compile::Transport::SOAPHTTP;
use strict;

####

eval {

	my $inputs = {
		&#039;sequence&#039; =&gt; { &#039;usa&#039; =&gt; &#039;embl:X65921&#039;}
	};

	my $serviceendpoint =
	  &#039;http://www.ebi.ac.uk/soaplab/typed/services/display.showfeat&#039;;

	print &quot;Retriving and processing the WSDL and the XSDs imported\n&quot;;
	my $wsdl  = XML::LibXML-&gt;new-&gt;parse_file( $serviceendpoint . &#039;?wsdl&#039; );
	my $proxy = XML::Compile::WSDL11-&gt;new($wsdl);
	foreach my $schema ( 1, 2, 3 ) {
		my $xsdXml =
		  XML::LibXML-&gt;new-&gt;parse_file( $serviceendpoint . &#039;?xsd=&#039; . $schema );
		if($XML::Compile::SOAP::VERSION &lt; 2.0)
		{
			$proxy-&gt;schemas-&gt;importDefinitions($xsdXml);
		}
		else
		{
			$proxy-&gt;importDefinitions($xsdXml);
		}
	}

	print &quot;Preparing caller object for runAndWaitFor operation\n&quot;;
	my $runAndWaitFor = $proxy-&gt;compileClient(&#039;runAndWaitFor&#039;);

	print &quot;Calling the service and getting the response\n&quot;;
	my ( $answer, $trace ) = $runAndWaitFor-&gt;( $inputs );

	# &amp;printTrace($trace);

	my %answer = %{$answer};
	my %answer_ = %{ $answer{&#039;runAndWaitForResponse&#039;} };
	my $report = $answer_{&#039;report&#039;};
	my $detailed_status = $answer_{&#039;detailed_status&#039;};
	my $outfile = $answer_{&#039;outfile&#039;};
	my $outfile_url = $answer_{&#039;outfile_url&#039;};


	print &quot;\nSoaplab report received:\n----------------------------\n\n$report\n&quot;;

	if ( $detailed_status == 0 ) {
		print &quot;Passed\n&quot;;
		exit 0;
	}

	print &quot;Failed\n&quot;;
	exit 1;
};

if ($@) {
	print &quot;Caught an exception\n&quot; . $@;
	exit 1;
}

# Print request/response trace
sub printTrace($) {
	my $trace = shift;
	$trace-&gt;printTimings;
	$trace-&gt;printRequest;
	$trace-&gt;printResponse;
}

# File to String
sub file2String($) {
	my $fname = shift;
	open FILE, $fname or die &quot;Couldn&#039;t open file: $!&quot;;
	my $fcontent = join( &quot;&quot;, &lt;FILE&gt; );
	close FILE;
	return $fcontent;
}

</pre>

</div>
<!-- EDIT8 SECTION "Example" [2535-4532] -->
<h3 class="sectionedit9" id="references">References</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> <a href="http://www.embraceregistry.net/documentation" class="urlextern" target="_blank" title="http://www.embraceregistry.net/documentation"  rel="nofollow">Embrace Registry Documentation</a></div>
</li>
<li class="level1"><div class="li"> <a href="http://www.soapui.org/" class="urlextern" target="_blank" title="http://www.soapui.org/"  rel="nofollow">soapUI Web Services Testing Framework</a></div>
</li>
</ul>

</div>
<!-- EDIT9 SECTION "References" [4533-] -->