====== Pseudo-Synonyms for Search ======

**ONLY USED AT INDEX TIME TO ENRICH METADATA FOR SEARCH** (there are some major issues with using the synonyms at query time, one of them being that they are ANDed and not ORed).

Current list of synonyms used in SOLR are here: http://biocatalogue.rubyforge.org/svn/trunk/vendor/plugins/acts_as_solr/solr/solr/conf/synonyms.txt

Scripts in ... to process...

===== Email to Explain Changes [2009-06-12] =====

Hi Franck and all,

There's been a MAJOR change in the way I am doing the pseudo synonyms now (the ones we intend to use to aid in search).

BEFORE this change:

We built a synonyms list where we had mappings where each mapping had the format...

//[ a set of (related) terms that a user might search for ] => [ the list of pseudo synonyms that should be included in the user's search to broaden the search and get more useful results]//

So, these pseudo synonyms mapping were used at *query* time to aid in the search when a user provides a search query.

Unfortunately, SOLR doesn't work this way with it's synonyms :-( :-( :-( There are three main issues here (ref: http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters#head-2c461ac74b4ddd82e453dc68fcfc92da77358d46).:
  * the pseudo synonyms get ANDed in the search which means that we get lesser or no results (trying searching for "protein" on the beta site right now).
  * SOLR doesn't handle multiple word queries very well.
  * The way SOLR parses the query breaks the synonyms search.

I looked and looked but there was no way I could make SOLR play nice. So I've decided to do it differently (and this is the way that is recommended).

NOW:

I have changed the synonyms processing to happen at *index* time (ie: when indexing the services into SOLR for search later). This does mean that every time we update the synonyms list we need to reindex all the content.

So now, the mappings are essentially used to enrich the index for each thing that is being indexed in SOLR. This is basically the opposite of the above, and the format is:

//[ a set of terms that may be in a service's metadata, or annotation, or whatever, when SOLR comes to indexing something ] => [ the list of terms that should be put into the index for that specific thing being indexed so that searches for any of these terms will match this item ]//

As you've probably guessed, this means we need to be very careful about what we have here. We CANNOT have things like this (which would be caused by ambiguous terms):

Multiple Alignment => Multiple Alignment, Protein Sequence Analysis, Nucleotide Sequence Analysis

... because otherwise every service etc that has the words "multiple alignment" will also get the words "Protein Sequence Analysis" AND "Nucleotide Sequence Analysis" and one of those will be incorrect for that service.

Based on this new knowledge, please can you verify the list of synonyms that we now have for SOLR - http://biocatalogue.rubyforge.org/svn/trunk/vendor/plugins/acts_as_solr/solr/solr/conf/synonyms.txt. Note the ones I have commented out (with a '#') - this is because they are ambiguous.

Note that you can still produce the raw synonyms list in the previous format because I have a script to convert it from the old format to the new (reversed) format. However there may be the danger of ambiguous terms so we should be vigilant about this.

One added benefit to doing it this way is that we can use this to also suggest tags to users and better enrich the metadata of the services...

Phew!

Jits


