<html>
<div class="box_important" style="margin-top: 0";>
<b>Please note:</b> This page is a work in progress.
</div>
</html>


====== Codebase Guidelines ======

The BioCatalogue codebase is:
  * [[https://github.com/myGrid/biocatalogue|hosted on GitHub]]
  * licensed under the [[http://en.wikipedia.org/wiki/BSD_license|BSD license]]
  * runs on Rails 2.3.2 and Ruby 1.8.5 / 1.8.6

===== Important! =====

  * In the Rails application, NEVER commit the following to the repository (svn:ignore properties should ensure that this doesn't happen, but be vigilant!)
    * anything in 
      * /log/
      * /tmp/
      * /var/
    * /config/database.yml  (see below)
    * /config/initializers/biocat_local.rb (see below)
    * /config/initializers/geokit_local.rb (see below)
    * /config/initializers/mail.rb (see below)
    * /db/schema.db  (this is automatically generated by Rails)
    * any temporarily generated files in /public/
    * /vendor/plugins/acts_as_solr/solr/solr/data (and it's contents)
    * Anything in /vendor/plugins/acts_as_solr/solr/temp

  * Set **ENABLE_SEARCH** to ''false'' temporarily for the **initial** db:migrate used to set up the database in the first place


===== Installation =====

See **[[Development:Installation|installation instructions page]]**


===== Tips =====

  * When editing code, set your indent length to 2 spaces for best results when viewing code.

===== Gems =====

==== Need to be installed on server / development environment ====

  * rake

  * mongrel (only required if running script/server)

  * [[http://wiki.apache.org/solr/solr-ruby|solr-ruby]]

  * [[http://addressable.rubyforge.org/|addressable]]

  * [[http://dnsruby.rubyforge.org/|dnsruby]]

  * [[http://github.com/pluginaweek/plugin_test_helper/tree/master|plugin_test_helper]]
    * Only required to test certain plugins.

  * [[http://tzinfo.rubyforge.org/|tzinfo]] (used by Rails 2.2.2)

  * [[http://daemons.rubyforge.org/|daemons]].
    * gem install daemons
    * Used mainly for the background processing runner.

  * [[http://systemtimer.rubyforge.org/|SystemTimer]]
    * gem install SystemTimer
    * To have proper timeouts (see: http://ph7spot.com/articles/system_timer).

  * [[http://www.zenspider.com/ZSS/Products/RubyInline/|RubyInline]]
    * gem install RubyInline
    * The memcache-client gem takes advantage of this gem to provide greater performance.

  * [[http://libxml.rubyforge.org/|libxml-ruby]]
    * gem install libxml-ruby

  * [[http://github.com/mperham/memcache-client/tree/master|memcache-client]]
    * Although this is embedded in the codebase it still needs to be installed in order to prevent the version within Rails (v1.6.4.99) to be loaded instead.

  * json
    * gem install json

  * mysql
    * gem install mysql

==== Embedded within codebase (no need to install) ====

  * [[http://github.com/rubaidh/google_analytics/tree/master|rubaidh-google_analytics]]

  * [[http://github.com/jnunemaker/twitter/tree/master|jnunemaker-twitter]]

  * [[http://github.com/pelle/oauth/tree/master|oauth]]

  * [[http://github.com/mbleigh/mash/tree/master|mash]]

  * [[http://github.com/jnunemaker/httparty/tree/master|httparty]]

  * [[http://github.com/jnunemaker/crack/tree/master|crack]]

  * [[http://github.com/topfunky/ruby-hmac/tree/master|ruby-hmac]]

  * [[http://github.com/onyx/cache-money/tree/master|onyx-cache-money]]

  * [[http://github.com/mperham/memcache-client/tree/master|memcache-client]]
    * Although Rails has it's own version of memcache-client, this one is so much faster.

  * [[http://rubyforge.org/frs/?group_id=2524&release_id=14841|soap4r]]
    * Used to create rpc driver to soap services
    * IMPORTANT: make sure you do not have the httpclient gem installed locally as this will cause the application to break!

  * [[http://github.com/norman/disqus/tree/master|disqus]]
    * For disqus integration

  * [[http://geokit.rubyforge.org/|geokit]]

  * [[http://github.com/grosser/rpx_now/|rpx_now]]
    * **NOTE:** this has been modified to provide proxy support (in lib/rpx_now.rb from around line 162)

  * [[http://github.com/Bantik/seer|seer]]

  * [[https://github.com/jcangas/version_info|version_info]]

==== Need to be installed only for development purposes ====

None

==== For future (do not install just yet) ====

  * [[http://github.com/skaes/railsbench/tree/master|railsbench]], ONLY if you want to benchmark the Rails app.
    * [sudo] gem install skaes-railsbench   (NOTE: you first need http://gems.github.com in your gems repo list)

  * [[http://github.com/nkallen/cache-money/tree/master|nkallen-cache-money]]

  * [[http://rubyforge.org/projects/bioruby/|BioRuby]]. The project is also available on [[http://github.com/bioruby/bioruby/tree/master|github]]
    * gem install bio

  * [[http://github.com/pluginaweek/state_machine/tree/master|state_machine]] (used by some plugins)
    * gem install state_machine

  * [[http://github.com/80beans/wysihat-engine|wysihat-engine]]
    * For rich text editor


===== Plugins (already in /vendor/plugins/) =====

  * acts_as_activity_logged from myExperiment

  * [[http://www.juixe.com/techknow/index.php/2006/07/05/acts-as-bookmarkable-plugin/|acts_as_bookmarkable]]

  * acts_as_solr -
    * Was: [[http://myexperiment.rubyforge.org/svn/trunk/vendor/plugins/acts_as_solr/|acts_as_solr from myExperiment codebase]]
    * Then: [[http://github.com/bcardarella/acts_as_solr/tree/master]]
    * Now: [[http://github.com/mattmatt/acts_as_solr/tree/master]]

  * [[http://actsastrashable.rubyforge.org/|acts_as_trashable]]

  * [[http://github.com/jaap3/addthis/tree/master|addthis]]
    * For the bookmarking widget

  * [[http://github.com/trotter/after_commit/tree/master|after_commit]]
    * Patched by Jits on 2009-06-22 to include logging on failure (ref: http://github.com/ericworking/after_commit/commit/66aa170e302f04694a7312ee389164a64649ae60).

  * [[development:annotations|annotations]]

  * asset_packager (with YUI compressor support)
    * Article - http://railsillustrated.com/more-speed-improvements-with-asset_packager.html
    * GitHub - http://github.com/eandrejko/asset_packager/tree/master

  * [[http://github.com/rails/atom_feed_helper/tree/master|atom_feed_helper]]

  * [[http://wiki.github.com/rails/auto_complete|auto_complete]]

  * [[http://github.com/pauldowman/better_logging/tree/master|better_logging]]

  * [[http://github.com/ihower/country_and_region_select/tree/master|country_and_region_select]]

  * [[http://github.com/pboling/exception_notification/tree/master|exception_notification - [Super] Exception Notifier Plugin for Rails]]

  * [[http://geokit.rubyforge.org/|geokit-rails]]

  * [[https://github.com/mokolabs/headliner|headliner]]

  * [[http://github.com/why/markaby/tree/master|markaby]]

  * [[http://github.com/paolodona/rails-widgets/wikis|rails-widgets]]

  * [[http://github.com/ambethia/recaptcha/tree/master|recaptcha]]

  * [[http://github.com/jebw/redbox/tree/master|redbox]]

  * [[http://github.com/rails/request_profiler|request_profiler]]

  * [[http://github.com/sgarza/rounded_corners_helper/tree/master|rounded_corners_helper]]

  * [[http://github.com/henrik/slugalizer/tree/master|slugalizer]]

  * [[https://github.com/acunote/template_inliner|template_inliner]]
    * Note, the entire call to render inlined partial must be on the one line for template inliner to work.

  * [[http://rails.savvica.com/2007/11/6/email-veracity-plugin|validates_email_veracity_of]]

  * [[http://blog.hasmanythrough.com/2007/7/14/validate-your-existence|validates_existence]]

  * [[http://github.com/henrik/validates_url_format_of/tree/master|validates_url_format_of]]

  * [[http://svn.techno-weenie.net/projects/plugins/white_list/|white_list]]

  * [[http://github.com/mislav/will_paginate/wikis|will_paginate]]


===== Important Design Decisions =====

  * service_deployments = instances of a service hosted AND provisioned in a location by a provider
  * All the following refer to the actual service type object (eg: SoapService or RestService etc):

  service_version_instance
  service_instance 
  service_versionified
  service_versionified_instance

  * For SOAP we assume the service structure is all from wsdl doc (ie: provider) whereas REST we assume the service structure is all from the submitter.

  * Tagging the SoapService object itself is not relevant, only tagging either the root (Service) or SoapOperation/Inputs/Outputs. Although, we now have cases where tags have been added to the SoapService object itself.


===== Pseudo-Synonyms for Search =====

See: [[Development:pseudo_synonyms_search|Pseudo-Synonyms for Search]]

===== Background Processing =====

See: [[Development: Background Processing]]


===== Caching =====

See: [[Development: Caching]]


===== Asset Packager (for CSS and JS) =====

We use a plugin called [[http://github.com/eandrejko/asset_packager/tree/master|asset_packager]] to combine and compress the CSS and JS files to greatly improve the client side loading environment.

This plugin, in production mode, automatically generates two files:
  * /public/javascripts/base_packaged.js
  * /public/stylesheets/base_packaged.css

... which are the combined and compressed versions.

This plugin relies on the YUI Compressor and thus requires a JVM environment to run in.

IMPORTANT: when doing at update to the servers, the following command MUST be run in order to refresh the packaged JS and CSS files:

  rake asset:packager:build_all  


===== Developing in Branches =====

Any major new features/development should be done in branches instead of trunk to ensure that trunk is always relatively stable. When development in the branch has reached a stable point then it can be merged back into trunk and deployed to the site. This way we can do updates to the beta site in a more managed fashion and make sure we get bug fixes into trunk asap.

\\
**For information on branching/merging in SVN:**
  * From the SVN book (must read) - http://svnbook.red-bean.com/en/1.1/ch04.html
  * Command line examples - http://research.mosuma.com/faq/howto/svn_branch_merge
  * Step by step - http://blog.evanweaver.com/articles/2007/08/15/svn-branching-best-practices-in-practice/
    * Note: this suggests switching your local copy to the branch, which is quicker, but it is highly recommended to keep your local copy of trunk and instead checkout a fresh copy of each branch that you need to work on. This way you can work on trunk if you need to make any bugfixes etc.

\\
**Important:**
  * All branches must be placed in /branches
  * Be careful about the configuration of database.yml for your branches - if the branch you will be working on requires major db schema changes then you might want to consider not reusing the db used for your trunk working copy (since if you have to then switch back to trunk to fix something you will be connecting to a db that is potentially inconsistent with trunk). Instead, create a new db for that branch and import the content from the existing db.

\\
**The recommended procedure:**
  * Identify a discrete piece of work and create a branch in /branches for it (e.g.: /branches/read-users-minds).
  * Checkout your branch locally (ie: creating a new local copy of that branch).
  * Set up configuration etc as mentioned earlier in this page.
  * Write some code!
  * When you are happy that your branch is stable enough, to be merge the changeset into a local working copy of trunk. NOTE: at this stage, nothing has changed in trunk in the repository, just your local copy, so don't worry about conflicts etc.
  * Resolve any conflicts and fix any arising bugs.
  * Commit the changes you have made to trunk. In your commit message, make sure you explain which branch you have merged into trunk and from what revision (eg: if I created my branch in revision 2450 and then merged all changes from then till now into trunk I would say so in the commit message).
  * Pray to your divine saviour*

* Non-religious people are probably screwed here.

You can use either the svn command line tools or Eclipse (with the Subclipse plugin installed). Eclipse/Subclipse provides excellent merging and conflict resolution tools. For detailed instructions on how to merge back the changes in a branch to trunk check out: http://blog.daemon.com.au/go/blog-post/merging-with-subversion-and-eclipse.

===== Misc =====

  * Look to using [[http://rubyforge.org/projects/background-solr/|background-solr]] instead of acts_as_solr.

===== Problems/Errors and Possible Solutions =====

  * You see the error **undefined constant XXXX::YYYYY** - 

Check if you have the file:

  ./<APPL_ROOT>/config/initializers/biocat_local.rb 

If not then copy: 

  ./<APPL_ROOT>/config/initializers/biocat_local.rb.pre 
      into 
  ./<APPL_ROOT>/config/initializers/biocat_local.rb
===== Using Bundler =====

  * Instructions on how to integrate bundler into a rails 2.3.x application are available on the [http://gembundler.com/rails23.html| bundler page]
  * See the [http://gembundler.com/man/bundle-install.1.html| bundler man pages] for details on bundler commands
  * Bundler requires a recent version of rubygems, so update your rubygems first with :
   <code> gem update --system </code>
  * Now install the bundler gem
   <code> sudo gem install bundler </code>
  * Then from the application root
   <code> bundle install --path path/to/where/gems/should/be/installed</code>

If no path option is specified, bundler will install gems to your system default gems location

