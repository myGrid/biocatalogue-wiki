a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1217578184;s:8:"modified";i:1217840298;}s:7:"creator";s:6:"Hamish";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:8:"ericnzuo";s:4:"Eric";}s:4:"user";s:0:"";s:5:"title";s:17:"Versioning Policy";s:11:"description";a:2:{s:15:"tableofcontents";a:4:{i:0;a:4:{s:3:"hid";s:17:"versioning_policy";s:5:"title";s:17:"Versioning Policy";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:15:"service_version";s:5:"title";s:15:"Service Version";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:2;a:4:{s:3:"hid";s:36:"community_curator_annotation_version";s:5:"title";s:36:"Community/Curator Annotation Version";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:17:"two_version_model";s:5:"title";s:17:"Two Version Model";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:433:"The catalogue requires a mechanism for users to find out the details of a service (and its annoation) at a particular time point. This is akin to the versioning methods in in source control systems (e.g. CVS, Subversion, etc.) and in wiki systems. However there are potential issues with the granularity of versioning, the complexity of versioning visible to the user and clarity of conflicts between versions from different sources.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1217578184;s:8:"modified";i:1217840298;}s:7:"creator";s:6:"Hamish";s:11:"last_change";b:0;s:11:"contributor";a:1:{s:8:"ericnzuo";s:4:"Eric";}s:4:"user";s:0:"";}}