a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1269625416;s:8:"modified";i:1272976315;}s:7:"creator";s:5:"Jiten";s:11:"last_change";a:7:{s:4:"date";i:1272976315;s:2:"ip";s:14:"130.88.195.185";s:4:"type";s:1:"E";s:2:"id";s:20:"public:api:use_cases";s:4:"user";s:4:"jits";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:4:"jits";s:5:"Jiten";}s:4:"user";s:0:"";s:5:"title";s:37:"The BioCatalogue REST API - Use Cases";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:37:"the_biocatalogue_rest_api_-_use_cases";s:5:"title";s:37:"The BioCatalogue REST API - Use Cases";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:304:"Various use cases have been taken into account in order to build an API that provides a balance between utility and simplicity. 

This includes scenarios ranging from building simple scripts and mashups to integration with scientific workflow workbenches (like Taverna) and other repositories/registries.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1269625416;s:8:"modified";i:1272976315;}s:7:"creator";s:5:"Jiten";s:11:"last_change";a:7:{s:4:"date";i:1272976315;s:2:"ip";s:14:"130.88.195.185";s:4:"type";s:1:"E";s:2:"id";s:20:"public:api:use_cases";s:4:"user";s:4:"jits";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:4:"jits";s:5:"Jiten";}s:4:"user";s:0:"";}}